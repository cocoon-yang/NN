Target Function 
$$
f(x) = 4.2 x^{2} + 2.2 x 
$$  
NN Topology: 1, 4, 1
The ideal weights are 
1 4 1 
1 4 -1
1 0.000000 0.000000 -1 -1      // Const Value Weight 
1 1.000000 2.200000 -1 -1    //  Weight of x 
1 2.000000 4.200000 -1 -1    //  Weight of x^{2}  
1 3.000000 0.000000-1 -1     //  Weight of x^{3}  
4 1 -1
4 0.000000 -0.000000 -1 -1 -1.000000 -1 -1 -1.000000 -1 -1 -0.000000-1 -1 

Test Code 
\begin{footnotesize}
\begin{verbatim}
void simple_NN_test()
{
	float x[]{ 1.4f, 0.3f, 0.1f };
	float y[]{ 0.4f, 0.3f, 0.1f };

	NN theNN;
	theNN.setModel({ 1, 4, 1 });
	theNN.init(); 
	//theNN.show();
	theNN.save("4.txt"); 

	for (int i = 1; i < 100; i++)
	{
		x[0] = 0.2 * 5 + 1.0;
		y[0] = 4.2 * x[0] * x[0] + 2.2 * x[0];

		std::cout << std::endl;
		std::cout << "    Iteration " << i << std::endl;
		std::cout << "-------------------------" << std::endl;
		std::cout << "  x: " << x[0] << "  y: " << y[0] << std::endl;
		theNN.train(x, y, 0.2f); 

		if (theNN.isFinish())
		{
			theNN.save("5.txt");
			break;
		}
	}
}
\end{verbatim}
\end{footnotesize} 

==================================================
Test Case 1
-------------

Set $ x = 2.0 $, 
Iteration Number: 16  
Real Object Value: 21.2
       Predict Value: 21.1972
                     Error:  -0.00553131
NN Topology: 1, 4, 1

Init Weights:  
1 4 1 
1 4 -1
1 0.000000 0.171559 -1 -1      // Const Value Weight 
1 1.000000 -3.501405 -1 -1    //  Weight of x 
1 2.000000 -4.038647 -1 -1    //  Weight of x^{2}  
1 3.000000 0.447518 -1 -1     //  Weight of x^{3}  
4 1 -1
4 0.000000 -0.682868 -1 -1 -1.222485 -1 -1 -1.311038 -1 -1 -0.278000 -1 -1 

Result Weights: 
1 4 1 
1 4 -1
1 0.000000 0.194768 -1 -1 
1 1.000000 0.529736 -1 -1 
1 2.000000 0.611151 -1 -1 
1 3.000000 -0.282011 -1 -1 
4 1 -1
4 0.000000 7.524014 -1 -1 8.260695 -1 -1 7.093082 -1 -1 6.034877 -1 -1 


==================================================
Test Case 2
-------------

Set $ x = 2.0 $, 
Iteration Number: 16  
Real Object Value: 21.2
       Predict Value: 21.1951
                     Error:  -0.00980377
NN Topology: 1, 4, 1

Init Weights:  
1 4 1 
1 4 -1
1 0.000000 -0.676005 -1 -1 
1 1.000000 -2.275678 -1 -1 
1 2.000000 -2.417642 -1 -1 
1 3.000000 0.203829 -1 -1 
4 1 -1
4 0.000000 0.481647 -1 -1 -0.135160 -1 -1 -1.550774 -1 -1 -0.831412 -1 -1 

Result Weights: 
1 4 1 
1 4 -1
1 0.000000 -4.124176 -1 -1 
1 1.000000 -1.147359 -1 -1 
1 2.000000 -0.626276 -1 -1 
1 3.000000 1.055654 -1 -1 
4 1 -1
4 0.000000 28.976643 -1 -1 28.064722 -1 -1 28.554392 -1 -1 29.730595 -1 -1 


==================================================
If use random $x$ value, 


Test Case 3
-------------

Test Code 
\begin{footnotesize}
\begin{verbatim}
void simple_NN_test()
{
	float x[]{ 1.4f, 0.3f, 0.1f };
	float y[]{ 0.4f, 0.3f, 0.1f };

	NN theNN;
	theNN.setModel({ 1, 4, 1 });
	theNN.init(); 
	//theNN.show();
	theNN.save("4.txt"); 

	for (int i = 1; i < 100; i++)
	{
		x[0] = getRandVal(); 
		y[0] = 4.2 * x[0] * x[0] + 2.2 * x[0];

		std::cout << std::endl;
		std::cout << "    Iteration " << i << std::endl;
		std::cout << "-------------------------" << std::endl;
		std::cout << "  x: " << x[0] << "  y: " << y[0] << std::endl;
		theNN.train(x, y, 0.2f); 

		if (theNN.isFinish())
		{
			theNN.save("5.txt");
			break;
		}
	}
}
\end{verbatim}
\end{footnotesize} 


Iteration Number: 36  
Real Object Value:  
       Predict Value:  
                     Error:  -0.00679796
NN Topology: 1, 4, 1

Init Weights:  
1 4 1 
1 4 -1
1 0.000000 -2.904634 -1 -1 
1 1.000000 1.000069 -1 -1 
1 2.000000 1.263932 -1 -1 
1 3.000000 -1.047596 -1 -1 
4 1 -1
4 0.000000 -2.021193 -1 -1 0.375844 -1 -1 0.227382 -1 -1 -1.983470 -1 -1 

Result Weights: 
1 4 1 
1 4 -1
1 0.000000 -2.904634 -1 -1 
1 1.000000 1.000069 -1 -1 
1 2.000000 1.263932 -1 -1 
1 3.000000 -1.047596 -1 -1 
4 1 -1
4 0.000000 0.163205 -1 -1 2.560242 -1 -1 2.411780 -1 -1 0.200928 -1 -1 


From the weights of result neurons, 
$$
0.163205,  2.560242, 2.411780, 0.200928 
$$
these four weights corresponding to the power function neuron 
$x^{0}, x, x^{2}, x^{3}$ respectively. 

The result weights show active effections of the components of objective function.


==================================================

Test Case 4
-------------  


Iteration Number: 252  
                          x:    -0.00039231
Real Object Value:   -0.000862436
       Predict Value:  -0.000603941
                     Error:  0.000516989
NN Topology: 1, 4, 1

Init Weights:  
1 4 1 
1 4 -1
1 0.000000 -3.151056 -1 -1 
1 1.000000 -2.974291 -1 -1 
1 2.000000 -1.811300 -1 -1 
1 3.000000 -3.979681 -1 -1 
4 1 -1
4 0.000000 -1.943242 -1 -1 -0.509311 -1 -1 -1.135773 -1 -1 -0.426291 -1 -1 

Result Weights: 
1 4 1 
1 4 -1
1 0.000000 0.847263 -1 -1 
1 1.000000 -2.510303 -1 -1 
1 2.000000 -2.107030 -1 -1 
1 3.000000 1.276551 -1 -1 
4 1 -1
4 0.000000 -2.230754 -1 -1 -1.365320 -1 -1 -1.216975 -1 -1 -3.110532 -1 -1  

The result weights show NONE active effection of the components of objective function. 



